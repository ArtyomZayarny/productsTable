{"version":3,"sources":["components/context.js","components/AddFrom.js","components/Input/Input.js","components/RowItem/RowItem.js","App.js","serviceWorker.js","index.js","components/AddForm.module.css","components/RowItem/RowItem.module.css"],"names":["MyContext","React","createContext","AddForm","addProduct","useState","name","setName","price","setPrice","category","setCategory","isError","setError","options","useContext","handleChange","value","Form","onSubmit","e","preventDefault","result","fields","obj","flag","key","hasErrors","errors","checkFields","id","shortid","generate","stock","handleAddProduct","Field","className","classes","error","onChange","target","placeholder","errorMsg","Select","data","categoryOptions","type","Button","text","Input","mode","state","setState","style","read","edit","RowItem","product","removeProduct","toggleEdit","useEffect","rowFields","Object","entries","filter","item","index","Table","Row","map","itemArr","Cell","btnEdit","onClick","handleEdit","positive","negative","productsContext","App","products","showModal","setData","updateProducts","useCallback","push","Provider","Modal","onClose","open","trigger","Content","image","length","celled","Header","HeaderCell","Body","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.1f2d1811.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n  \r\n  const MyContext = React.createContext();\r\n  export default MyContext\r\n","import React, {useState, useContext} from 'react';\r\nimport shortid from \"shortid\";\r\nimport MyContext from './context'\r\nimport {Form,Button,Select,Checkbox} from 'semantic-ui-react'\r\nimport classes from './AddForm.module.css'\r\n\r\nconst AddForm = ({addProduct}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price,setPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [isError,setError] = useState({\r\n        name:'',\r\n        price:'',\r\n        category:''\r\n    })\r\n \r\n    const options = useContext(MyContext);\r\n    const handleChange = (name, value ) => {\r\n        setError({...isError, name:'',price:'',category:''})\r\n        switch (name) {\r\n            case 'name': \r\n            setName(value)\r\n            break;\r\n            case 'price':\r\n                setPrice(value)\r\n                break;\r\n        default:return false;\r\n        }\r\n    }\r\n    const handleSelect = (e,data) => {\r\n        setCategory(data.value)\r\n    }\r\n\r\n    \r\n\r\n    const checkFields = (fields) => {      \r\n        let obj = {};\r\n        let flag = false\r\n\r\n        for (let key in fields) {\r\n            if (fields[key] === '') {\r\n                obj[key] = true;\r\n                flag = true\r\n            } else {\r\n                obj[key] = ''\r\n            }\r\n        }\r\n        return {hasErrors:flag,errors:obj}\r\n    }\r\n\r\n    const handleAddProduct = (e) => {\r\n        e.preventDefault();   \r\n        \r\n     let result = checkFields({name,category,price});\r\n\r\n        if (result.hasErrors) {\r\n            setError({...isError, ...result.errors})\r\n        } else {\r\n                const obj = {};\r\n                obj.id = shortid.generate();\r\n                obj.name = name;\r\n                obj.category = category;\r\n                obj.price = price;\r\n                obj.stock = 500;  \r\n            addProduct(obj)\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Form onSubmit={(e) => {handleAddProduct(e)}}>\r\n            <Form.Field>\r\n                <label>Product Name</label>\r\n                <input value={name} name=\"name\"  className={isError.name === true ? classes.error : ''} onChange={(e) => {handleChange(e.target.name, e.target.value)}} placeholder='Product Name' />\r\n                <span className={classes.errorMsg}>This field is required</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Category</label>\r\n                <Select value={category} className={isError.category === true ? classes.error : ''} name=\"category\" onChange={handleSelect} placeholder='Select category' options={options.categoryOptions}/>\r\n                <span className={classes.errorMsg}>This field is required</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Price</label>\r\n                <input value={price} type=\"number\" className={isError.price === true ? classes.error : ''} name=\"price\" onChange={(e) => {handleChange(e.target.name, e.target.value)}} placeholder='Price' />\r\n                <span className={classes.errorMsg}>This field is required</span>\r\n            </Form.Field>\r\n            <Button type='submit'>Add</Button>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\nexport default AddForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Select} from 'semantic-ui-react'\r\nimport style from '../RowItem/RowItem.module.css'\r\n\r\nconst categoryOptions = [\r\n    { key: 'ph', value: 'Phones', text: 'Phones' },\r\n    { key: 'Notebook', value: 'Notebook', text: 'Notebook' }];\r\n\r\nexport default function Input({name, value, mode}) {\r\n    const [state,setState] = useState({\r\n        name:name,\r\n        value:value\r\n    });\r\n\r\n    const handleChange = (name,value) => {\r\n        setState({...state,name:name,value:value})\r\n    }\r\n\r\n    const handleSelect = (e,data) => {\r\n        setState({...state,value:data.value})\r\n    }\r\n    return (\r\n        <>\r\n        {mode === 'edit' && name === 'category' ? \r\n         <Select value={state.value} name=\"category\" onChange={handleSelect} placeholder='Select category' options={categoryOptions} /> :\r\n        \r\n         <input \r\n         className={mode === 'read' ? style.read : style.edit }\r\n          type={name === 'price' ? 'number' : 'text'} \r\n          name={state.name} \r\n          value={state.value} \r\n          onChange={ (e) => {handleChange(e.target.name, e.target.value)} }\r\n            />\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useState,useEffect} from 'react';\r\nimport {Table, Button} from 'semantic-ui-react'\r\nimport Input from '../Input/Input'\r\nimport style from './RowItem.module.css'\r\n\r\n\r\nexport default function RowItem({product,removeProduct}) {\r\n    \r\n    const [state,setState] = useState({\r\n        mode:'read',\r\n        id:product.id,\r\n        toggleEdit:'Edit',\r\n        fields:[],\r\n    }) \r\n\r\n    useEffect(() => {\r\n        let rowFields = Object.entries(product).filter( (item,index) =>  item[index] !== 'id' )        \r\n        setState({...state, fields:rowFields});\r\n    }, [])\r\n\r\n    const handleEdit = () => {\r\n        switch(state.mode) {\r\n            case 'read':\r\n                setState({...state,mode:'edit',toggleEdit:'Save'})\r\n                break;\r\n            default:setState({...state,mode:'read',toggleEdit:'Edit'})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Table.Row>\r\n            { state.fields.map( (itemArr) => {\r\n                    return (\r\n                        <Table.Cell key={itemArr[1]}>\r\n                            <Input name={itemArr[0]} value={itemArr[1]}  mode={state.mode} />\r\n                         </Table.Cell>\r\n                    )}) \r\n            }\r\n             <Table.Cell>\r\n                <Button className={style.btnEdit} onClick={ () => { handleEdit() }} positive>{state.toggleEdit}</Button>\r\n                <Button onClick={ () => { removeProduct(state.id) }} negative>Remove</Button>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}","import React,{useState,useCallback} from 'react';\nimport MyContext from './components/context'\nimport { Table, Button,Modal } from 'semantic-ui-react'\nimport AddForm from './components/AddFrom';\nimport RowItem from './components/RowItem/RowItem'\nimport './App.css'\n\nconst productsContext =  {\n  categoryOptions:[\n    { key: 'ph', value: 'Phones', text: 'Phones' },\n    { key: 'Notebook', value: 'Notebook', text: 'Notebook' }]\n}\n\n\nfunction App() {\n  const [data,setData] = useState({\n    products:[],\n    showModal:false\n    \n  });\n\n  const removeProduct = (id) => {\n    let updateProducts = data.products.filter( (item) => item.id !== id)\n    setData({...data, products:updateProducts })\n  }\n  const addProduct = useCallback(\n    (value) => {    \n      setData({...data, showModal:false})\n      let  products = data.products;\n      products.push(value);\n      setData({...data, products:products})\n    },[]);\n    const closeModal = () => {  \n        setData({...data,showModal:false})\n    }\n  return (\n\n    <>\n      <MyContext.Provider value={productsContext} >\n      <Modal onClose={closeModal} open={data.showModal} trigger={<Button onClick={() => {setData({...data,showModal:true})}} >Add product</Button>}>\n        <Modal.Content image>\n            <AddForm addProduct={addProduct}/>\n        </Modal.Content>\n      </Modal>\n      {\n        data.products.length === 0 ? <p>You have no product </p> :\n        <div className=\"table\">\n        <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Product</Table.HeaderCell>\n            <Table.HeaderCell>Category</Table.HeaderCell>\n            <Table.HeaderCell>Price</Table.HeaderCell>\n            <Table.HeaderCell>Stock</Table.HeaderCell>\n            <Table.HeaderCell>Actions</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n         { data.products.map( (product) => {\n            return (\n              <RowItem key={product.id} product={product} removeProduct={removeProduct} />\n            )}) }\n      </Table.Body>\n      </Table>\n      </div>\n      }\n\n      </MyContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"AddForm_error__3uBsU\",\"errorMsg\":\"AddForm_errorMsg__3lfDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"read\":\"RowItem_read__2fKuS\",\"edit\":\"RowItem_edit__3YMuC\",\"btnEdit\":\"RowItem_btnEdit__3bG1B\"};"],"sourceRoot":""}